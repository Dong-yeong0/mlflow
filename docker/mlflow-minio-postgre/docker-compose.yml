version: "3"

services:
  mlflow-postgres:
    image: postgres:13.7
    container_name: mlflow-postgres
    environment:
      POSTGRES_USER: ${MLFLOW_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MLFLOW_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MLFLOW_POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "${MLFLOW_POSTGRES_USER}", "-d", "${MLFLOW_POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - mlops-network

  mlflow-minio:
    image: minio/minio
    container_name: mlflow-minio
    ports:
      - ${MLFLOW_MINIO_APP_PORT}:${MLFLOW_MINIO_APP_PORT}
      - ${MLFLOW_MINIO_WEB_PORT}:${MLFLOW_MINIO_WEB_PORT}
    environment:
      MINIO_ROOT_USER: ${MLFLOW_MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MLFLOW_MINIO_ROOT_PASSWORD}
    command: minio server /data --console-address :${MLFLOW_MINIO_WEB_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MLFLOW_MINIO_APP_PORT}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - ./minio:/data
    networks:
      - mlops-network

  mlflow-server:
    build:
      context: ./mlflow-server
      dockerfile: Dockerfile
    container_name: mlflow-server
    depends_on:
      - mlflow-postgres
      - mlflow-minio
    ports:
      - ${MLFLOW_SERVER_PORT}:5000
    environment:
      AWS_ACCESS_KEY_ID: ${MLFLOW_MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MLFLOW_MINIO_ROOT_PASSWORD}
      MLFLOW_S3_ENDPOINT_URL: http://mlflow-minio:${MLFLOW_MINIO_APP_PORT}
    command:
      - /bin/sh
      - -c
      - |
        mc config host add mlflowminio http://mlflow-minio:${MLFLOW_MINIO_APP_PORT} ${MLFLOW_MINIO_ROOT_USER} ${MLFLOW_MINIO_ROOT_PASSWORD} &&
        mc mb --ignore-existing mlflowminio/mlflow
        mlflow server \
        --backend-store-uri postgresql://${MLFLOW_POSTGRES_USER}:${MLFLOW_POSTGRES_PASSWORD}@mlflow-postgres/${MLFLOW_POSTGRES_DB} \
        --default-artifact-root s3://mlflow \
        --host 0.0.0.0
    networks:
      - mlops-network
volumes:
  pgdata:
  minio:
networks:
  mlops-network:
    name: mlops-network